{"version":3,"sources":["logo.svg","Chart/Buttons.js","ExternalLinks/ExternalLinks.js","Chart/Chart.js","App.js","reportWebVitals.js","index.js"],"names":["Buttons","props","onClick","externalLinks","className","href","id","icon","faLinkedin","faGithubSquare","Chart","state","firstResponse","series","data","options","chart","height","type","title","text","align","style","fontSize","color","annotations","xaxis","x","borderColor","label","background","orientation","offsetY","tooltip","enabled","yaxis","this","getData","period","axios","get","then","response","dataResponse","map","item","push","y","setState","catch","error","num","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAAe,I,sFCYAA,EATC,SAAAC,GAAK,OACrB,gCACE,wBAAQC,QAAS,WAAOD,EAAMC,QAAQ,IAAtC,mBACA,wBAAQA,QAAS,WAAOD,EAAMC,QAAQ,IAAtC,mBACA,wBAAQA,QAAS,WAAOD,EAAMC,QAAQ,KAAtC,oBACA,wBAAQA,QAAS,WAAOD,EAAMC,QAAQ,QAAtC,wB,sBCWaC,EAdO,WAClB,OACI,sBAAKC,UAAU,gBAAf,UACA,mBAAGC,KAAO,uCAAuCC,GAAG,WAApD,SACA,cAAC,IAAD,CAAiBC,KAAMC,QAIvB,mBAAGH,KAAK,6BAA6BC,GAAG,SAAxC,SACA,cAAC,IAAD,CAAiBC,KAAME,YC+FhBC,E,kDArGb,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IAEDU,MAAQ,CACXC,eAAe,EACfC,OAAQ,CAAC,CACPC,KAAM,KAERC,QAAS,CACPC,MAAO,CACLC,OAAQ,IACRC,KAAM,eAERC,MAAO,CACLC,KAAM,YACNC,MAAO,SACPC,MAAO,CACLC,SAAU,OACVC,MAAO,YAGXC,YAAa,CACXC,MAAO,CACL,CACEC,EAAG,eACHC,YAAa,UACbC,MAAO,CACLD,YAAa,UACbN,MAAO,CACLC,SAAU,OACVC,MAAO,OACPM,WAAY,WAEdC,YAAa,aACbC,QAAS,EACTZ,KAAM,sBAKda,QAAS,CACPC,SAAS,GAEXR,MAAO,CACLR,KAAM,YAGRiB,MAAO,CACLF,QAAS,CACPC,SAAS,MAjDA,E,qDAyDnB,YACmC,IAA7BE,KAAKzB,MAAMC,eACbwB,KAAKC,QAAQ,M,qBAMjB,SAAQC,GAAS,IAAD,OACdC,IAAMC,IAAI,wJAA0JF,EAAS,uMAC1KG,MAAK,SAAAC,GACJ,IAAIC,EAAe,GACnBD,EAAS5B,KAAK8B,KAAI,SAACC,GACjBF,EAAaG,KAAK,CAChBnB,EAAGkB,EAAI,KACPE,EAAG,CAACF,EAAI,KAAUA,EAAI,KAAUA,EAAI,IAASA,EAAI,YAGrD,EAAKG,SAAS,CAAEnC,OAAQ,CAAC,CAAEC,KAAM6B,IAAiB/B,eAAe,OAElEqC,OAAM,SAAAC,GACL,EAAKF,SAAS,CAAEE,OAAO,S,oBAK7B,WAAU,IAAD,OAEP,OACE,sBAAK9C,UAAU,aAAf,UACE,8CACA,sBAAKA,UAAU,OAAf,UACE,cAAC,EAAD,CAASF,QAAS,SAACiD,GAAD,OAAS,EAAKd,QAAQc,MACxC,qBAAK7C,GAAG,QAAR,SACA,cAAC,IAAD,CAAgBS,QAASqB,KAAKzB,MAAMI,QAASF,OAAQuB,KAAKzB,MAAME,OAAQK,KAAK,cAAcD,OAAQ,WAGvG,cAAC,EAAD,W,GA/FcmC,aCMLC,MARf,WACE,OACE,qBAAKjD,UAAU,MAAf,SACC,cAAC,EAAD,OCIUkD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.99066510.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './Chart.css';\r\n\r\nconst Buttons = props => (\r\n<div>\r\n  <button onClick={() => {props.onClick(1)}}>1 Min</button>\r\n  <button onClick={() => {props.onClick(5)}}>5 Min</button>\r\n  <button onClick={() => {props.onClick(60)}}>1 Hour</button>\r\n  <button onClick={() => {props.onClick(10080)}}>1 Week</button>\r\n</div>\r\n)\r\n\r\nexport default Buttons;\r\n\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './ExternalLinks.css';\r\nimport { faGithubSquare, faLinkedin } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst externalLinks = () => {\r\n    return (\r\n        <div className=\"externalLinks\">\r\n        <a href = \"https://www.linkedin.com/in/shanip27\" id=\"linkedin\">\r\n        <FontAwesomeIcon icon={faLinkedin}/>\r\n        </a>\r\n         \r\n       \r\n        <a href=\"https://github.com/shanipj\" id=\"github\">\r\n        <FontAwesomeIcon icon={faGithubSquare}  />\r\n        </a>\r\n        </div>  \r\n    )}\r\n\r\nexport default externalLinks;\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport Buttons from './Buttons';\r\nimport './Chart.css';\r\nimport ExternalLinks from '../ExternalLinks/ExternalLinks';\r\n\r\nclass Chart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstResponse: false,\r\n      series: [{\r\n        data: []\r\n      }],\r\n      options: {\r\n        chart: {\r\n          height: 400,\r\n          type: 'candlestick',\r\n        },\r\n        title: {\r\n          text: 'Apple Inc',\r\n          align: 'center',\r\n          style: {\r\n            fontSize: '36px',\r\n            color: '#000000',\r\n          }\r\n        },\r\n        annotations: {\r\n          xaxis: [\r\n            {\r\n              x: 'Oct 06 14:00',\r\n              borderColor: '#00E396',\r\n              label: {\r\n                borderColor: '#00E396',\r\n                style: {\r\n                  fontSize: '12px',\r\n                  color: '#fff',\r\n                  background: '#00E396'\r\n                },\r\n                orientation: 'horizontal',\r\n                offsetY: 7,\r\n                text: 'Annotation Test'\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n        },\r\n        xaxis: {\r\n          type: 'category',\r\n\r\n        },\r\n        yaxis: {\r\n          tooltip: {\r\n            enabled: true\r\n          }\r\n        }\r\n      },\r\n\r\n\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.state.firstResponse === false) {\r\n      this.getData(60);\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  getData(period) {\r\n    axios.get('https://www.fxempire.com/api/v1/en/stocks/chart/candles?Identifier=AAPL.XNAS&IdentifierType=Symbol&AdjustmentMethod=All&IncludeExtended=False&period=' + period + '&Precision=Minutes&StartTime=8/28/2020%2016:0&EndTime=9/4/2020%2023:59&_fields=ChartBars.StartDate,ChartBars.High,ChartBars.Low,ChartBars.StartTime,ChartBars.Open,ChartBars.Close,ChartBars.Volume')\r\n      .then(response => {\r\n        let dataResponse = [];\r\n        response.data.map((item) => {\r\n          dataResponse.push({\r\n            x: item[\"Date\"],\r\n            y: [item[\"Open\"], item[\"High\"], item[\"Low\"], item[\"Close\"]]\r\n          })\r\n        })\r\n        this.setState({ series: [{ data: dataResponse }], firstResponse: true });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error: true })\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"background\">\r\n        <h1>Market Chart</h1>\r\n        <div className=\"main\">\r\n          <Buttons onClick={(num) => this.getData(num)} />\r\n          <div id=\"chart\">\r\n          <ReactApexChart options={this.state.options} series={this.state.series} type=\"candlestick\" height={350} />\r\n          </div>\r\n        </div>\r\n      <ExternalLinks/>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Chart from './Chart/Chart';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Chart/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}